from ccsi.app.search.service.parameters import StringParameter, IntParameter, BBoxParameter, WKTParameter, \
    FloatParameter, DateTimeParameter, OptionParameter
from ccsi.app.search.service.transform import simple, check_min_value

# TODO: transfer config into DB, generation and registration of parameters
# TODO: harmonization of custom:status mundi vs credias
# TODO: harmonization of platform mundi vs credias
# TODO: harmonization of senzormode mundi vs credias

class Config:

    VERSION = '0.8'
    # registred collection tags, used to identified service endpoint
    COLLECTION_TAGS = ['clms', 'sentinel1', 'sentinel2', 'sentinel3']

    # registred catalogue tags, used to identified service endpoint
    RESOUCES_TAGS = ['mundi', 'scihub']

    SERVICE_TAGS = {'collection': {'sentinel1': ['scihub', 'creodias_sentinel1', 'mundi_s1'],
                                   'sentinel2': ['scihub', 'mundi_s2'],
                                   'sentinel3': ['mundi_s3'],
                                   'clms': ['mundi_clms']},
                    'resource': {'mundi': ['mundi_clms', 'mundi_s1', 'mundi_s2', 'mundi_s3'],
                                  'scihub': ['scihub'],
                                  'creodias': ['creodias_sentinel1']}}

    XML_NAMESPACES = {'atom': {'prefix': '', 'namespace': 'http://www.w3.org/2005/Atom'},
                      'dc': {'prefix': 'dc', 'namespace': "http://purl.org/dc/elements/1.1/"},
                      'gml': {'prefix': 'gml', 'namespace': 'http://www.opengis.net/gml'},
                      'opensearch': {'prefix': 'opensearch', 'namespace': 'http://a9.com/-/spec/opensearch/1.1/'},
                      'dias': {'prefix': 'DIAS', 'namespace': 'http://tas/DIAS'},
                      'geo': {'prefix': 'geo', 'namespace': 'http://a9.com/-/opensearch/extensions/geo/1.0/'},
                      'time': {'prefix': 'time', 'namespace': 'http://a9.com/-/opensearch/extensions/time/1.0/'},
                      'param': {'prefix': 'param', 'namespace':  'http://a9.com/-/spec/opensearch/extensions/parameters/1.0/'},
                      'ccsi': {'prefix': 'ccsi', 'namespace':  'http://spec/ccsi/parameters'},
                      'eo': {'prefix': 'eo', 'namespace':  'http://a9.com/-/opensearch/extensions/eo/1.0/'}}

    PARAMETERS_DESCRIPTION = {'collection': {'namespace': XML_NAMESPACES.get('ccsi'), 'title': 'Data collection name'},
                              'resource': {'namespace': XML_NAMESPACES.get('ccsi'), 'title': 'Name of the data resourses'},
                              'searchterm': {'namespace': XML_NAMESPACES.get('opensearch'), 'title': 'General queryable parameters'},
                              'productid': {'namespace': XML_NAMESPACES.get('eo'), 'title': 'Product id of the product'},
                              'maxrecords': {'namespace': XML_NAMESPACES.get('opensearch'), 'title': 'Number of records per page'},
                              'startindex': {'namespace': XML_NAMESPACES.get('opensearch'), 'title': 'Start index o results'},
                              'page': {'namespace': XML_NAMESPACES.get('opensearch'), 'title': 'Page of results; default 0'},
                              'bbox': {'namespace': XML_NAMESPACES.get('geo'), 'title': "Region of Interest defined by 'west, south, east, north' coordinates of longitude, latitude, in decimal degrees (EPSG:4326)"},
                              'geometry': {'namespace': XML_NAMESPACES.get('geo'), 'title': "Region of Interest defined in Well Known Text standard (WKT) with coordinates in decimal degrees (EPSG:4326)"},
                              'lat': {'namespace': XML_NAMESPACES.get('geo'), 'title': "Longitude expressed in decimal degrees (EPSG:4326) - have to be used with geo:lat and geo:radius"},
                              'lon': {'namespace': XML_NAMESPACES.get('geo'), 'title': "Longitude expressed in decimal degrees (EPSG:4326) - have to be used with geo:lon and geo:radius"},
                              'radius': {'namespace': XML_NAMESPACES.get('geo'), 'title': "Expressed in meters - should be used with geo:lon and geo:lat"},
                              'timestart': {'namespace': XML_NAMESPACES.get('time'), 'title': 'Search interval start time'},
                              'timeend': {'namespace': XML_NAMESPACES.get('time'), 'title': 'Search interval end time'},
                              'custom:title': {'namespace': XML_NAMESPACES.get('ccsi'), 'title': 'Custom parameter availible of certaint resourcess'},
                              'custom:name': {'namespace': XML_NAMESPACES.get('ccsi'), 'title': 'Geoname location intersecting product footprint'},
                              'orbitdirection': {'namespace': XML_NAMESPACES.get('eo'), 'title': 'Acquisition orbit direction'},
                              'platform': {'namespace': XML_NAMESPACES.get('eo'), 'title': 'Platform collection'},
                              'producttype': {'namespace': XML_NAMESPACES.get('eo'), 'title': 'Type of the product'},
                              'resolution': {'namespace': XML_NAMESPACES.get('eo'), 'title': 'Product resolution'},
                              'customm:status': {'namespace': XML_NAMESPACES.get('ccsi'), 'title': 'Product on-line status'},
                              'instrument': {'namespace': XML_NAMESPACES.get('eo'), 'title': 'Instrument name'},
                              'sensortype': {'namespace': XML_NAMESPACES.get('eo'), 'title': 'Sensor type'},
                              'sensormode': {'namespace': XML_NAMESPACES.get('eo'), 'title': 'Sensor mode'},
                              'acquisition': {'namespace': XML_NAMESPACES.get('eo'), 'title': 'Acquisition mission mode'},
                              'polarisation': {'namespace': XML_NAMESPACES.get('eo'), 'title': 'Polarisation channel(s) configuration'},
                              'processinglevel': {'namespace': XML_NAMESPACES.get('eo'), 'title': 'Product processing level'},
                              'custom:quality': {'namespace': XML_NAMESPACES.get('ccsi'), 'title': 'Product quality check status'},
                              'acquisitionstation': {'namespace': XML_NAMESPACES.get('eo'), 'title': 'Acquisition station'},
                              'orbitnumber': {'namespace': XML_NAMESPACES.get('eo'), 'title': 'Acquisition orbit number'},
                              'cloudcover': {'namespace': XML_NAMESPACES.get('eo'), 'title': 'Product cloud coverage percentage interval'},
                              'snowcover': {'namespace': XML_NAMESPACES.get('eo'), 'title': 'Product snow coverage percentage interval'},
                              'organisationName': {'namespace': XML_NAMESPACES.get('eo'), 'title': 'Name of the organization'},
                              'custom:cultivatedcover': {'namespace': XML_NAMESPACES.get('ccsi'), 'title': 'Product cultivated coverage percentage interval'},
                              'custom:desertcover': {'namespace': XML_NAMESPACES.get('ccsi'), 'title': 'Product desert coverage percentage interval'},
                              'custom:floodedcover': {'namespace': XML_NAMESPACES.get('ccsi'), 'title': 'Product flood coverage percentage interval'},
                              'custom:forestcover': {'namespace': XML_NAMESPACES.get('ccsi'), 'title': 'Product forest coverage percentage interval'},
                              'custom:herbaceouscover': {'namespace': XML_NAMESPACES.get('ccsi'), 'title': 'Product herbal coverage percentage interval'},
                              'custom:icecover': {'namespace': XML_NAMESPACES.get('ccsi'), 'title': 'Product ice coverage percentage interval'},
                              'custom:urbancover': {'namespace': XML_NAMESPACES.get('ccsi'), 'title': 'Product urban coverage percentage interval'},
                              'custom:watercover': {'namespace': XML_NAMESPACES.get('ccsi'), 'title': 'Product water coverage percentage interval'},
                              'custom:relativeorbitnumber': {'namespace': XML_NAMESPACES.get('ccsi'), 'title': 'Product relative orbit number'},
                              'custom:inspitre_identifier': {'namespace': XML_NAMESPACES.get('ccsi'), 'title': 'Product product inspire identificator'}
                              }



    # CCSI base api parameters
    SERVICE_PARAMETERS = {'base': [{'name': 'collection', 'typ': OptionParameter, 'transform': simple, 'default': COLLECTION_TAGS},
                                   {'name': 'resource', 'typ': OptionParameter, 'transform': simple, 'default': RESOUCES_TAGS},
                                   {'name': 'searchterm', 'typ': StringParameter, 'transform': simple},
                                   {'name': 'productid', 'typ': StringParameter, 'transform': simple},
                                   {'name': 'maxrecords', 'typ': IntParameter, 'transform': simple, 'default': ['50']},
                                   {'name': 'startindex', 'typ': IntParameter, 'transform': simple, 'default': ['1']},
                                   {'name': 'page', 'typ': IntParameter, 'transform': simple, 'default': ['0']},
                                   {'name': 'bbox', 'typ': BBoxParameter, 'transform': simple},
                                   {'name': 'geometry', 'typ': WKTParameter, 'transform': simple},
                                   {'name': 'lat', 'typ': FloatParameter, 'transform': simple},
                                   {'name': 'lon', 'typ': FloatParameter, 'transform': simple},
                                   {'name': 'radius', 'typ': FloatParameter, 'transform': simple},
                                   {'name': 'timestart', 'typ': DateTimeParameter, 'transform': simple},
                                   {'name': 'timeend', 'typ': DateTimeParameter, 'transform': simple}],
                          'mundi_clms': [{'name': 'g', 'typ': StringParameter, 'transform': simple},
                                         {'name': 'title', 'typ': StringParameter, 'transform': simple},
                                         {'name': 'startIndex', 'typ': IntParameter, 'transform': simple},
                                         {'name': 'maxRecords', 'typ': IntParameter, 'transform': simple},
                                         {'name': 'parentIdentifier', 'typ': StringParameter, 'transform': simple},
                                         {'name': 'bbox', 'typ': BBoxParameter, 'transform': simple},
                                         {'name': 'geometry', 'typ': WKTParameter, 'transform': simple},
                                         {'name': 'lat', 'typ': FloatParameter, 'transform': simple},
                                         {'name': 'lon', 'typ': FloatParameter, 'transform': simple},
                                         {'name': 'radius', 'typ': FloatParameter, 'transform': simple},
                                         {'name': 'name', 'typ': StringParameter, 'transform': simple},
                                         {'name': 'timeStart', 'typ': DateTimeParameter, 'transform': simple},
                                         {'name': 'timeEnd', 'typ': DateTimeParameter, 'transform': simple},
                                         {'name': 'platform', 'typ': StringParameter, 'transform': simple},
                                         {'name': 'productType', 'typ': StringParameter, 'transform': simple},
                                         {'name': 'resolution', 'typ': IntParameter, 'transform': simple},
                                         {'name': 'onlineStatus', 'typ': StringParameter, 'transform': simple}],
                          'mundi_s1': [{'name': 'g', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'title', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'startIndex', 'typ': IntParameter, 'transform': simple},
                                       {'name': 'maxRecords', 'typ': IntParameter, 'transform': simple},
                                       {'name': 'parentIdentifier', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'bbox', 'typ': BBoxParameter, 'transform': simple},
                                       {'name': 'geometry', 'typ': WKTParameter, 'transform': simple},
                                       {'name': 'lat', 'typ': FloatParameter, 'transform': simple},
                                       {'name': 'lon', 'typ': FloatParameter, 'transform': simple},
                                       {'name': 'radius', 'typ': FloatParameter, 'transform': simple},
                                       {'name': 'name', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'timeStart', 'typ': DateTimeParameter, 'transform': simple},
                                       {'name': 'timeEnd', 'typ': DateTimeParameter, 'transform': simple},
                                       {'name': 'platform', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'instrument', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'sensorType', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'sensorMode', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'orbitDirection', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'acquisitionType', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'polarisationChannels', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'productType', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'processingLevel', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'productQualityStatus', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'onlineStatus', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'resolution', 'typ': IntParameter, 'transform': simple},
                                       {'name': 'acquisitionStation', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'orbitNumber', 'typ': IntParameter, 'transform': simple}],
                          'mundi_s2': [{'name': 'g', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'title', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'startIndex', 'typ': IntParameter, 'transform': simple},
                                       {'name': 'maxRecords', 'typ': IntParameter, 'transform': simple},
                                       {'name': 'parentIdentifier', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'bbox', 'typ': BBoxParameter, 'transform': simple},
                                       {'name': 'geometry', 'typ': WKTParameter, 'transform': simple},
                                       {'name': 'lat', 'typ': FloatParameter, 'transform': simple},
                                       {'name': 'lon', 'typ': FloatParameter, 'transform': simple},
                                       {'name': 'radius', 'typ': FloatParameter, 'transform': simple},
                                       {'name': 'name', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'timeStart', 'typ': DateTimeParameter, 'transform': simple},
                                       {'name': 'timeEnd', 'typ': DateTimeParameter, 'transform': simple},
                                       {'name': 'platform', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'instrument', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'sensorType', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'sensorMode', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'orbitDirection', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'acquisitionType', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'productType', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'processingLevel', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'productQualityStatus', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'onlineStatus', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'resolution', 'typ': IntParameter, 'transform': simple},
                                       {'name': 'cloudCover', 'typ': IntParameter, 'transform': simple},
                                       {'name': 'snowCover', 'typ': IntParameter, 'transform': simple},
                                       {'name': 'acquisitionStation', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'orbitNumber', 'typ': IntParameter, 'transform': simple}],
                          'mundi_s3': [{'name': 'g', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'title', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'startIndex', 'typ': IntParameter, 'transform': simple},
                                       {'name': 'maxRecords', 'typ': IntParameter, 'transform': simple},
                                       {'name': 'parentIdentifier', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'bbox', 'typ': BBoxParameter, 'transform': simple},
                                       {'name': 'geometry', 'typ': WKTParameter, 'transform': simple},
                                       {'name': 'lat', 'typ': FloatParameter, 'transform': simple},
                                       {'name': 'lon', 'typ': FloatParameter, 'transform': simple},
                                       {'name': 'radius', 'typ': FloatParameter, 'transform': simple},
                                       {'name': 'name', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'timeStart', 'typ': DateTimeParameter, 'transform': simple},
                                       {'name': 'timeEnd', 'typ': DateTimeParameter, 'transform': simple},
                                       {'name': 'platform', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'instrument', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'sensorType', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'sensorMode', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'orbitDirection', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'acquisitionType', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'productType', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'processingLevel', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'productQualityStatus', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'onlineStatus', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'resolution', 'typ': IntParameter, 'transform': simple},
                                       {'name': 'cloudCover', 'typ': IntParameter, 'transform': simple},
                                       {'name': 'snowCover', 'typ': IntParameter, 'transform': simple},
                                       {'name': 'acquisitionStation', 'typ': StringParameter, 'transform': simple},
                                       {'name': 'orbitNumber', 'typ': IntParameter, 'transform': simple}],
                          'scihub': [{'name': '', 'typ': StringParameter, 'transform': simple},
                                     {'name': 'producttype', 'typ': StringParameter, 'transform': simple},
                                     {'name': 'rows', 'typ': IntParameter, 'transform': simple},
                                     {'name': 'start', 'typ': IntParameter, 'transform': simple},
                                     {'name': 'orbitdirection', 'typ': StringParameter, 'transform': simple}],
                          'creodias_s1': [{'name': 'q', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'maxRecords', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'index', 'typ': IntParameter, 'transform': check_min_value, 'default': ['1']},
                                          {'name': 'page', 'typ': IntParameter, 'transform': simple, 'default': ['1']},
                                          {'name': 'parentIdentifier', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'geometry', 'typ': WKTParameter, 'transform': simple},
                                          {'name': 'box', 'typ': BBoxParameter, 'transform': simple},
                                          {'name': 'name', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'lat', 'typ': FloatParameter, 'transform': simple},
                                          {'name': 'lon', 'typ': FloatParameter, 'transform': simple},
                                          {'name': 'radius', 'typ': FloatParameter, 'transform': simple},
                                          {'name': 'startDate', 'typ': DateTimeParameter, 'transform': simple},
                                          {'name': 'completionDate', 'typ': DateTimeParameter, 'transform': simple},
                                          {'name': 'productType', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'processingLevel', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'platform', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'instrument', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'resolution', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'organisationName', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'orbitNumber', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'sensorMode', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'cloudCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'snowCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'cultivatedCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'desertCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'floodedCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'forestCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'herbaceousCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'iceCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'urbanCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'waterCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'status', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'orbitDirection', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'relativeOrbitNumber', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'polarisation', 'typ': StringParameter, 'transform': simple}],
                          'creodias_s2': [{'name': 'q', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'maxRecords', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'index', 'typ': IntParameter, 'transform': check_min_value, 'default': ['1']},
                                          {'name': 'page', 'typ': IntParameter, 'transform': simple, 'default': ['1']},
                                          {'name': 'parentIdentifier', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'geometry', 'typ': WKTParameter, 'transform': simple},
                                          {'name': 'box', 'typ': BBoxParameter, 'transform': simple},
                                          {'name': 'name', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'lat', 'typ': FloatParameter, 'transform': simple},
                                          {'name': 'lon', 'typ': FloatParameter, 'transform': simple},
                                          {'name': 'radius', 'typ': FloatParameter, 'transform': simple},
                                          {'name': 'startDate', 'typ': DateTimeParameter, 'transform': simple},
                                          {'name': 'completionDate', 'typ': DateTimeParameter, 'transform': simple},
                                          {'name': 'productType', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'processingLevel', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'platform', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'instrument', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'resolution', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'organisationName', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'orbitNumber', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'sensorMode', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'cloudCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'snowCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'cultivatedCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'desertCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'floodedCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'forestCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'herbaceousCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'iceCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'urbanCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'waterCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'status', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'orbitDirection', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'relativeOrbitNumber', 'typ': IntParameter, 'transform': simple}],
                          'creodias_s3': [{'name': 'q', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'maxRecords', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'index', 'typ': IntParameter, 'transform': check_min_value, 'default': ['1']},
                                          {'name': 'page', 'typ': IntParameter, 'transform': simple, 'default': ['1']},
                                          {'name': 'parentIdentifier', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'geometry', 'typ': WKTParameter, 'transform': simple},
                                          {'name': 'box', 'typ': BBoxParameter, 'transform': simple},
                                          {'name': 'name', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'lat', 'typ': FloatParameter, 'transform': simple},
                                          {'name': 'lon', 'typ': FloatParameter, 'transform': simple},
                                          {'name': 'radius', 'typ': FloatParameter, 'transform': simple},
                                          {'name': 'startDate', 'typ': DateTimeParameter, 'transform': simple},
                                          {'name': 'completionDate', 'typ': DateTimeParameter, 'transform': simple},
                                          {'name': 'productType', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'processingLevel', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'platform', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'instrument', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'resolution', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'organisationName', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'orbitNumber', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'sensorMode', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'cloudCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'snowCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'cultivatedCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'desertCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'floodedCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'forestCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'herbaceousCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'iceCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'urbanCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'waterCover', 'typ': IntParameter, 'transform': simple},
                                          {'name': 'status', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'orbitDirection', 'typ': StringParameter, 'transform': simple},
                                          {'name': 'relativeOrbitNumber', 'typ': IntParameter, 'transform': simple}]}



    MAPED_PAIRS = {'mundi_clms': {'searchterm': 'g',
                                  'custom:title': 'title',
                                  'startindex': 'startIndex',
                                  'maxrecords': 'maxRecords',
                                  'productid': 'parentIdentifier',
                                  'bbox': 'bbox',
                                  'geometry': 'geometry',
                                  'lat': 'lat',
                                  'lon': 'lon',
                                  'radius': 'radius',
                                  'custom:name': 'name',
                                  'timestart': 'timeStart',
                                  'timeend': 'timeEnd',
                                  'platform': 'platform',
                                  'producttype': 'productType',
                                  'resolution': 'resolution',
                                  'custom:status': 'onlineStatus'},
                   'mundi_s1': {'searchterm': 'g',
                                'custom:title': 'title',
                                'startindex': 'startIndex',
                                'maxrecords': 'maxRecords',
                                'productid': 'parentIdentifier',
                                'bbox': 'bbox',
                                'geometry': 'geometry',
                                'lat': 'lat',
                                'lon': 'lon',
                                'radius': 'radius',
                                'custom:name': 'name',
                                'timestart': 'timeStart',
                                'timeend': 'timeEnd',
                                'platform': 'platform',
                                'instrumet': 'instrument',
                                'sensortype': 'sensorType',
                                'sensormode': 'sensorMode',
                                'orbitdirection': 'orbitDirection',
                                'acquisition': 'acquisitionType',
                                'polarisation': 'polarisationChannels',
                                'producttype': 'productType',
                                'level': 'processingLevel',
                                'custom:quality': 'productQualityStatus',
                                'custom:status': 'onlineStatus',
                                'resolution': 'resolution',
                                'acquisitionstation': 'acquisitionStation',
                                'orbitnumber': 'orbitNumber'},
                   'mundi_s2': {'searchterm': 'g',
                                'custom:title': 'title',
                                'startindex': 'startIndex',
                                'maxrecords': 'maxRecords',
                                'productid': 'parentIdentifier',
                                'bbox': 'bbox',
                                'geometry': 'geometry',
                                'lat': 'lat',
                                'lon': 'lon',
                                'radius': 'radius',
                                'custom:name': 'name',
                                'timestart': 'timeStart',
                                'timeend': 'timeEnd',
                                'platform': 'platform',
                                'instrumet': 'instrument',
                                'sensortype': 'sensorType',
                                'sensormode': 'sensorMode',
                                'orbitdirection': 'orbitDirection',
                                'acquisition': 'acquisitionType',
                                'producttype': 'productType',
                                'level': 'processingLevel',
                                'custom:quality': 'productQualityStatus',
                                'custom:status': 'onlineStatus',
                                'resolution': 'resolution',
                                'cloudcover': 'cloudCover',
                                'snowcover': 'snowCover',
                                'acquisitionstation': 'acquisitionStation',
                                'orbitnumber': 'orbitNumber'},
                   'mundi_s3': {'searchterm': 'g',
                                'custom:title': 'title',
                                'startindex': 'startIndex',
                                'maxrecords': 'maxRecords',
                                'productid': 'parentIdentifier',
                                'bbox': 'bbox',
                                'geometry': 'geometry',
                                'lat': 'lat',
                                'lon': 'lon',
                                'radius': 'radius',
                                'custom:name': 'name',
                                'timestart': 'timeStart',
                                'timeend': 'timeEnd',
                                'platform': 'platform',
                                'instrumet': 'instrument',
                                'sensortype': 'sensorType',
                                'sensormode': 'sensorMode',
                                'orbitdirection': 'orbitDirection',
                                'acquisition': 'acquisitionType',
                                'producttype': 'productType',
                                'level': 'processingLevel',
                                'custom:quality': 'productQualityStatus',
                                'custom:status': 'onlineStatus',
                                'resolution': 'resolution',
                                'cloudcover': 'cloudCover',
                                'snowcover': 'snowCover',
                                'acquisitionstation': 'acquisitionStation',
                                'orbitnumber': 'orbitNumber'},
                   'scihub': {'searchterm': '',
                              'producttype': 'producttype',
                              'maxrecords': 'rows',
                              'startindex': 'start',
                              'orbitdirection': 'orbitdirection'},
                   'creodias_s1': {'searchterm': 'q',
                                   'maxrecords': 'maxRecords',
                                   'startindex': 'index',
                                   'productid': 'parentIdentifier',
                                   'geometry': 'geometry',
                                   'bbox': 'box',
                                   'custom:name': 'name',
                                   'lat': 'lat',
                                   'lon': 'lon',
                                   'radius': 'radius',
                                   'timestart': 'startDate',
                                   'timeend': 'completionDate',
                                   'producttype': 'productType',
                                   'level': 'processingLevel',
                                   'platform': 'platform',
                                   'instrumet': 'instrument',
                                   'resolution': 'resolution',
                                   'organisationName': 'organisationName',
                                   'orbitnumber': 'orbitNumber',
                                   'sensormode': 'sensorMode',
                                   'cloudcover': 'cloudCover',
                                   'snowcover': 'snowCover',
                                   'custom:cultivatedover': 'cultivatedCover',
                                   'custom:desertcover': 'desertCover',
                                   'custom:floodedcover': 'floodedCover',
                                   'custom:forestcover': 'forestCover',
                                   'custom:herbaceouscover': 'herbaceousCover',
                                   'custom:icecover': 'iceCover',
                                   'custom:urbancover': 'urbanCover',
                                   'custom:waterCover': 'waterCover',
                                   'custom:status': 'status',
                                   'orbitdirection': 'orbitDirection',
                                   'custom:relativeorbitnumber': 'relativeOrbitNumber',
                                   'polarisation': 'polarisation'},
                   'creodias_s2': {'searchterm': 'q',
                                   'maxrecords': 'maxRecords',
                                   'startindex': 'index',
                                   'productid': 'parentIdentifier',
                                   'geometry': 'geometry',
                                   'bbox': 'box',
                                   'custom:name': 'name',
                                   'lat': 'lat',
                                   'lon': 'lon',
                                   'radius': 'radius',
                                   'timestart': 'startDate',
                                   'timeend': 'completionDate',
                                   'producttype': 'productType',
                                   'level': 'processingLevel',
                                   'platform': 'platform',
                                   'instrumet': 'instrument',
                                   'resolution': 'resolution',
                                   'organisationName': 'organisationName',
                                   'orbitnumber': 'orbitNumber',
                                   'sensormode': 'sensorMode',
                                   'cloudcover': 'cloudCover',
                                   'snowcover': 'snowCover',
                                   'custom:cultivatedover': 'cultivatedCover',
                                   'custom:desertcover': 'desertCover',
                                   'custom:floodedcover': 'floodedCover',
                                   'custom:forestcover': 'forestCover',
                                   'custom:herbaceouscover': 'herbaceousCover',
                                   'custom:icecover': 'iceCover',
                                   'custom:urbancover': 'urbanCover',
                                   'custom:waterCover': 'waterCover',
                                   'custom:status': 'status',
                                   'orbitdirection': 'orbitDirection',
                                   'custom:relativeorbitnumber': 'relativeOrbitNumber'},
                   'creodias_s3': {'searchterm': 'q',
                                   'maxrecords': 'maxRecords',
                                   'startindex': 'index',
                                   'productid': 'parentIdentifier',
                                   'geometry': 'geometry',
                                   'bbox': 'box',
                                   'custom:name': 'name',
                                   'lat': 'lat',
                                   'lon': 'lon',
                                   'radius': 'radius',
                                   'timestart': 'startDate',
                                   'timeend': 'completionDate',
                                   'producttype': 'productType',
                                   'level': 'processingLevel',
                                   'platform': 'platform',
                                   'instrumet': 'instrument',
                                   'resolution': 'resolution',
                                   'organisationName': 'organisationName',
                                   'orbitnumber': 'orbitNumber',
                                   'sensormode': 'sensorMode',
                                   'cloudcover': 'cloudCover',
                                   'snowcover': 'snowCover',
                                   'custom:cultivatedover': 'cultivatedCover',
                                   'custom:desertcover': 'desertCover',
                                   'custom:floodedcover': 'floodedCover',
                                   'custom:forestcover': 'forestCover',
                                   'custom:herbaceouscover': 'herbaceousCover',
                                   'custom:icecover': 'iceCover',
                                   'custom:urbancover': 'urbanCover',
                                   'custom:waterCover': 'waterCover',
                                   'custom:status': 'status',
                                   'orbitdirection': 'orbitDirection',
                                   'custom:relativeorbitnumber': 'relativeOrbitNumber'}}

    ENTRY_MAPED_PAIRS = {'mundi_clms': {'uid': {'func': 'text',
                                               'properties': ['id', XML_NAMESPACES.get('atom')]},
                                        'title': {'func': 'text',
                                                  'properties': ['title', XML_NAMESPACES.get('atom')]},
                                        'category': {'func': 'attribute',
                                                     'properties': ['category', XML_NAMESPACES.get('atom')]},
                                        'link_enclosure': {'func': 'attribute',
                                                           'properties': ['link[@rel="enclosure"]', XML_NAMESPACES.get('atom')]},
                                        'identifier': {'func': 'text',
                                                       'properties': ['identifier', XML_NAMESPACES.get('dc')]},
                                        'date':  {'func': 'text',
                                                  'properties': ['date', XML_NAMESPACES.get('dc')]},
                                        'creator': {'func': 'text',
                                                    'properties': ['creator', XML_NAMESPACES.get('dc')]},
                                        'geometry': {'func': 'gdal_geom', 'properties': None},
                                        'published': {'func': 'text',
                                                      'properties': ['published', XML_NAMESPACES.get('atom')]},
                                        'status': {'func': 'text',
                                                   'properties': ['onlineStatus', XML_NAMESPACES.get('dias')]}},
                         'mundi_s1': {'uid': {'func': 'text',
                                               'properties': ['id', XML_NAMESPACES.get('atom')]},
                                        'title': {'func': 'text',
                                                  'properties': ['title', XML_NAMESPACES.get('atom')]},
                                        'category': {'func': 'attribute',
                                                     'properties': ['category', XML_NAMESPACES.get('atom')]},
                                        'link_enclosure': {'func': 'attribute',
                                                           'properties': ['link[@rel="enclosure"]', XML_NAMESPACES.get('atom')]},
                                        'identifier': {'func': 'text',
                                                       'properties': ['identifier', XML_NAMESPACES.get('dc')]},
                                        'date':  {'func': 'text',
                                                  'properties': ['date', XML_NAMESPACES.get('dc')]},
                                        'creator': {'func': 'text',
                                                    'properties': ['creator', XML_NAMESPACES.get('dc')]},
                                        'geometry': {'func': 'gdal_geom', 'properties': None},
                                        'published': {'func': 'text',
                                                      'properties': ['published', XML_NAMESPACES.get('atom')]},
                                        'status': {'func': 'text',
                                                   'properties': ['onlineStatus', XML_NAMESPACES.get('dias')]}},
                         'mundi_s2': {'uid': {'func': 'text',
                                             'properties': ['id', XML_NAMESPACES.get('atom')]},
                                      'title': {'func': 'text',
                                                'properties': ['title', XML_NAMESPACES.get('atom')]},
                                      'category': {'func': 'attribute',
                                                   'properties': ['category', XML_NAMESPACES.get('atom')]},
                                      'link_enclosure': {'func': 'attribute',
                                                         'properties': ['link[@rel="enclosure"]', XML_NAMESPACES.get('atom')]},
                                      'identifier': {'func': 'text',
                                                     'properties': ['identifier', XML_NAMESPACES.get('dc')]},
                                      'date':  {'func': 'text',
                                                'properties': ['date', XML_NAMESPACES.get('dc')]},
                                      'creator': {'func': 'text',
                                                  'properties': ['creator', XML_NAMESPACES.get('dc')]},
                                      'geometry': {'func': 'gdal_geom', 'properties': None},
                                      'published': {'func': 'text',
                                                    'properties': ['published', XML_NAMESPACES.get('atom')]},
                                      'status': {'func': 'text',
                                                 'properties': ['onlineStatus', XML_NAMESPACES.get('dias')]}},
                         'mundi_s3': {'uid': {'func': 'text',
                                             'properties': ['id', XML_NAMESPACES.get('atom')]},
                                      'title': {'func': 'text',
                                                'properties': ['title', XML_NAMESPACES.get('atom')]},
                                      'category': {'func': 'attribute',
                                                   'properties': ['category', XML_NAMESPACES.get('atom')]},
                                      'link_enclosure': {'func': 'attribute',
                                                         'properties': ['link[@rel="enclosure"]', XML_NAMESPACES.get('atom')]},
                                      'identifier': {'func': 'text',
                                                     'properties': ['identifier', XML_NAMESPACES.get('dc')]},
                                      'date':  {'func': 'text',
                                                'properties': ['date', XML_NAMESPACES.get('dc')]},
                                      'creator': {'func': 'text',
                                                  'properties': ['creator', XML_NAMESPACES.get('dc')]},
                                      'geometry': {'func': 'gdal_geom', 'properties': None},
                                      'published': {'func': 'text',
                                                    'properties': ['published', XML_NAMESPACES.get('atom')]},
                                      'status': {'func': 'text',
                                                 'properties': ['onlineStatus', XML_NAMESPACES.get('dias')]}},
                         'scihub': {'uid': {'func': 'text',
                                           'properties': ["@name='uuid'", XML_NAMESPACES.get('atom')]},
                                    'title': {'func': 'text',
                                              'properties': ['summary', XML_NAMESPACES.get('atom')]},
                                    'link_enclosure': {'func': 'attribute_del',
                                             'properties': ['link[@href]', XML_NAMESPACES.get('atom'), ['rel']]},
                                    'geometry': {'func': 'gml_geom', 'properties': ["@name='gmlfootprint'", XML_NAMESPACES.get('atom')]},
                                    'status': {'func': 'text',
                                               'properties': ['@name="status"', XML_NAMESPACES.get('atom')]}},
                         'creodias_s1': {'uid': {'func': 'text',
                                           'properties': ["title", XML_NAMESPACES.get('atom')]},
                                    'title': {'func': 'text',
                                              'properties': ['summary', XML_NAMESPACES.get('atom')]},
                                    'link_enclosure': {'func': 'attribute',
                                                       'properties': ['link[@rel="enclosure"]', XML_NAMESPACES.get('atom')]},
                                    'geometry': {'func': 'gml_geom', 'properties': ["@name='gmlfootprint'", XML_NAMESPACES.get('atom')]},
                                    'identifier': {'func': 'text', 'properties': ['identifier', XML_NAMESPACES.get('dc')]}},
                         'creodias_s2': {'uid': {'func': 'text',
                                                'properties': ["title", XML_NAMESPACES.get('atom')]},
                                         'title': {'func': 'text',
                                                   'properties': ['summary', XML_NAMESPACES.get('atom')]},
                                         'link_enclosure': {'func': 'attribute',
                                                            'properties': ['link[@rel="enclosure"]', XML_NAMESPACES.get('atom')]},
                                         'geometry': {'func': 'gml_geom', 'properties': ["@name='gmlfootprint'", XML_NAMESPACES.get('atom')]},
                                         'identifier': {'func': 'text', 'properties': ['identifier', XML_NAMESPACES.get('dc')]}},
                         'creodias_s3': {'uid': {'func': 'text',
                                                'properties': ["title", XML_NAMESPACES.get('atom')]},
                                         'title': {'func': 'text',
                                                   'properties': ['summary', XML_NAMESPACES.get('atom')]},
                                         'link_enclosure': {'func': 'attribute',
                                                            'properties': ['link[@rel="enclosure"]', XML_NAMESPACES.get('atom')]},
                                         'geometry': {'func': 'gml_geom', 'properties': ["@name='gmlfootprint'", XML_NAMESPACES.get('atom')]},
                                         'identifier': {'func': 'text', 'properties': ['identifier', XML_NAMESPACES.get('dc')]}}}




    ENTRY_PARS = {'uid': {'type': 'text', 'tag': 'uid', 'namespace': XML_NAMESPACES.get('atom')},
                  'title': {'type': 'text', 'tag': 'title', 'namespace': XML_NAMESPACES.get('atom')},
                  'category': {'type': 'attribute_many', 'tag': 'category', 'namespace': XML_NAMESPACES.get('atom')},
                  'link_enclosure': {'type': 'attribute', 'tag': 'link', 'attrib': {'rel': 'enclosure'},
                           'namespace': XML_NAMESPACES.get('atom')},
                  'identifier': {'type': 'text', 'tag': 'identifier', 'namespace': XML_NAMESPACES.get('dc')},
                  'date': {'type': 'text', 'tag': 'date', 'namespace': XML_NAMESPACES.get('dc')},
                  'creator': {'type': 'text', 'tag': 'creator', 'namespace': XML_NAMESPACES.get('dc')},
                  'geometry': {'type': 'geometry', 'tag': 'geometry', 'namespace': XML_NAMESPACES.get('gml')},
                  'published': {'type': 'text', 'tag': 'published', 'namespace': XML_NAMESPACES.get('atom')},
                  'status': {'type': 'text', 'tag': 'status', 'namespace': XML_NAMESPACES.get('atom')}}

    # hide this in future into evn
    SECRET_KEY = 'dde809d6027c0f55ce89e56fd54703b6'

    SQLALCHEMY_DATABASE_URI = 'sqlite:///site.db'


    # new
    SERVICES_ = ['mundi_clms', 'mundi_s1', 'mundi_s2', 'mundi_s3', 'scihub', 'creodias_s1', 'creodias_s2', 'creodias_s3']

    CONNECTION_ = {'scihub': {'base_url': 'https://scihub.copernicus.eu/dhus/search?',
                              'type_query': 'scihub_query_rule',
                              'auth': {'type': 'login', 'login': 'mopletal', 'pwd': 'vzZn342CQu3t'}},
                   'mundi_clms': {'base_url': 'https://catalog-browse.default.mundiwebservices.com/acdc/catalog/proxy/'
                                              'search/LandMonitoring/opensearch?',
                                  'type_query': 'simple_encode',
                                  'auth': None},
                   'mundi_s1': {'base_url': 'https://catalog-browse.default.mundiwebservices.com/acdc/catalog/proxy/'
                                            'search/Sentinel1/opensearch?',
                                  'type_query': 'simple_encode',
                                  'auth': None},
                   'mundi_s2': {'base_url': 'https://catalog-browse.default.mundiwebservices.com/acdc/catalog/proxy/'
                                            'search/Sentinel2/opensearch?',
                                'type_query': 'simple_encode',
                                'auth': None},
                   'mundi_s3': {'base_url': 'https://catalog-browse.default.mundiwebservices.com/acdc/catalog/proxy/'
                                            'search/Sentinel3/opensearch?',
                                'type_query': 'simple_encode',
                                'auth': None},
                   'creodias_s1': {'base_url': 'https://finder.creodias.eu/resto/api/collections/Sentinel1/search.atom?',
                                  'type_query': 'simple_encode',
                                  'auth': None},
                   'creodias_s2': {'base_url': 'https://finder.creodias.eu/resto/api/collections/Sentinel2/search.atom?',
                                   'type_query': 'simple_encode',
                                   'auth': None},
                   'creodias_s3': {'base_url': 'https://finder.creodias.eu/resto/api/collections/Sentinel3/search.atom?',
                                   'type_query': 'simple_encode',
                                   'auth': None}
                   }

    RESPONSE_PARSERS_ = {'scihub': {'parser_type': 'xml',
                                    'properties': {'mapped_pars': ENTRY_MAPED_PAIRS.get('scihub'),
                                                  'entry_tag': 'entry'}},
                         'mundi_clms': {'parser_type': 'xml_gdal',
                                        'properties': {'mapped_pars': ENTRY_MAPED_PAIRS.get('mundi_clms'),
                                                       'entry_tag': 'entry'}},
                         'mundi_s1': {'parser_type': 'xml_gdal',
                                        'properties': {'mapped_pars': ENTRY_MAPED_PAIRS.get('mundi_s1'),
                                                       'entry_tag': 'entry'}},
                         'mundi_s2': {'parser_type': 'xml_gdal',
                                      'properties': {'mapped_pars': ENTRY_MAPED_PAIRS.get('mundi_s2'),
                                                     'entry_tag': 'entry'}},
                         'mundi_s3': {'parser_type': 'xml_gdal',
                                      'properties': {'mapped_pars': ENTRY_MAPED_PAIRS.get('mundi_s3'),
                                                     'entry_tag': 'entry'}},
                         'creodias_s1': {'parser_type': 'xml_gdal',
                                        'properties': {'mapped_pars': ENTRY_MAPED_PAIRS.get('creodias_s1'),
                                                       'entry_tag': 'entry'}},
                         'creodias_s2': {'parser_type': 'xml_gdal',
                                         'properties': {'mapped_pars': ENTRY_MAPED_PAIRS.get('creodias_s2'),
                                                        'entry_tag': 'entry'}},
                         'creodias_s3': {'parser_type': 'xml_gdal',
                                         'properties': {'mapped_pars': ENTRY_MAPED_PAIRS.get('creodias_s3'),
                                                        'entry_tag': 'entry'}}}

    ENDPOINTS = [{'properties': {'service_name': 'base',
                                'collection': None,
                                'resource': None},
                 'description': {'swagger_desc': 'General endpoint to access all registred datasets',
                                 'api_schema': 'base',
                                 'tag': ['global']}},
                {'properties': {'service_name': 'mundi_clms',
                                'collection': 'clms',
                                'resource': None},
                 'description': {'swagger_desc': 'General endpoint to access products from Mundi CLMS',
                                 'api_schema': 'mundi_clms',
                                 'tag': ['Mundi']}},
                 {'properties': {'service_name': 'mundi_s1',
                                 'collection': 'sentinel1',
                                 'resource': None},
                  'description': {'swagger_desc': 'General endpoint to access products from Mundi Sentinel 1',
                                  'api_schema': 'mundi_s1',
                                  'tag': ['Mundi']}},
                 {'properties': {'service_name': 'mundi_s2',
                                 'collection': 'sentinel2',
                                 'resource': None},
                  'description': {'swagger_desc': 'General endpoint to access products from Mundi Sentinel 2',
                                  'api_schema': 'mundi_s2',
                                  'tag': ['Mundi']}},
                 {'properties': {'service_name': 'mundi_s3',
                                 'collection': 'sentinel3',
                                 'resource': None},
                  'description': {'swagger_desc': 'General endpoint to access products from Mundi Sentinel 3',
                                  'api_schema': 'mundi_s3',
                                  'tag': ['Mundi']}},
                 {'properties': {'service_name': 'creodias_s1',
                                 'collection': 'sentinel1',
                                 'resource': None},
                  'description': {'swagger_desc': 'General endpoint to access products from Creodias Sentinel 1',
                                  'api_schema': 'creodias_s1',
                                  'tag': ['Creodias']}},
                 {'properties': {'service_name': 'creodias_s2',
                                 'collection': 'sentinel1',
                                 'resource': None},
                  'description': {'swagger_desc': 'General endpoint to access products from Creodias Sentinel 2',
                                  'api_schema': 'creodias_s2',
                                  'tag': ['Creodias']}},
                 {'properties': {'service_name': 'creodias_s3',
                                 'collection': 'sentinel1',
                                 'resource': None},
                  'description': {'swagger_desc': 'General endpoint to access products from Creodias Sentinel 3',
                                  'api_schema': 'creodias_s3',
                                  'tag': ['Creodias']}}]


config = Config()
